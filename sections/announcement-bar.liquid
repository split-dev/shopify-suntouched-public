

{%- for block in section.blocks -%}
  {%- case block.type -%}
    {%- when 'announcement' -%}
      <div class="announcement-bar color-{{ block.settings.color_scheme }} gradient" role="region" aria-label="{{ 'sections.header.announcement' | t }}" {{ block.shopify_attributes }}>
        <div class="container position-relative">

          {% form 'currency', class: "shopify-currency-form" %}
            <button class="btn btn-square-small currency-loading" type="submit" style="display:none;">
              <span class="fas fa-spinner fa-spin"></span>
            </button>
            <select name="currency" id="CurrencySelector" class=" select--small currency-selector{% if settings.currency_custom %} select-custom{% endif %}" aria-describedby="a11y-refresh-page-message a11y-selection-message" data-currency-selector>
              {% for currency in shop.enabled_currencies %}
                <option value="{{currency.iso_code}}"{% if currency == cart.currency %} selected="true"{% endif %}>
                  {{currency.iso_code}}
                </option>
              {% endfor %}
            </select>
          {% endform %}

          {%- if block.settings.text != blank -%}
            {%- if block.settings.link != blank -%}
              <a href="{{ block.settings.link }}" class="announcement-bar__link link link--text focus-inset animate-arrow">
            {%- endif -%}
            <p class="announcement-bar__message h5">
              {{ block.settings.text | escape }}
              {%- if block.settings.link != blank -%}
                {% render 'icon-arrow' %}
              {%- endif -%}
            </p>
            {%- if block.settings.link != blank -%}
              </a>
            {%- endif -%}
          {%- endif -%}
        </div>
      </div>
  {%- endcase -%}
{%- endfor -%}

{% javascript %}
  class LocalizationForm extends HTMLElement {
  constructor() {
  super();
  this.elements = {
  input: this.querySelector('input[name="locale_code"], input[name="country_code"]'),
  button: this.querySelector('button'),
  panel: this.querySelector('.disclosure__list-wrapper'),
  };
  this.elements.button.addEventListener('click', this.openSelector.bind(this));
  this.elements.button.addEventListener('focusout', this.closeSelector.bind(this));
  this.addEventListener('keyup', this.onContainerKeyUp.bind(this));

  this.querySelectorAll('a').forEach(item => item.addEventListener('click', this.onItemClick.bind(this)));
  }

  hidePanel() {
  this.elements.button.setAttribute('aria-expanded', 'false');
  this.elements.panel.setAttribute('hidden', true);
  }

  onContainerKeyUp(event) {
  if (event.code.toUpperCase() !== 'ESCAPE') return;

  this.hidePanel();
  this.elements.button.focus();
  }

  onItemClick(event) {
  event.preventDefault();
  const form = this.querySelector('form');
  this.elements.input.value = event.currentTarget.dataset.value;
  if (form) form.submit();
  }

  openSelector() {
  this.elements.button.focus();
  this.elements.panel.toggleAttribute('hidden');
  this.elements.button.setAttribute('aria-expanded', (this.elements.button.getAttribute('aria-expanded') === 'false').toString());
  }

  closeSelector(event) {
  const shouldClose = event.relatedTarget && event.relatedTarget.nodeName === 'BUTTON';
  if (event.relatedTarget === null || shouldClose) {
  this.hidePanel();
  }
  }
  }

  customElements.define('localization-form', LocalizationForm);
{% endjavascript %}

{% schema %}
{
  "name": "t:sections.announcement-bar.name",
  "max_blocks": 12,
  "blocks": [
    {
      "type": "announcement",
      "name": "t:sections.announcement-bar.blocks.announcement.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Welcome to our store",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text.label"
        },
        {
          "type": "select",
          "id": "color_scheme",
          "options": [
            {
              "value": "accent-1",
              "label": "t:sections.all.colors.accent_1.label"
            },
            {
              "value": "accent-2",
              "label": "t:sections.all.colors.accent_2.label"
            },
            {
              "value": "background-1",
              "label": "t:sections.all.colors.background_1.label"
            },
            {
              "value": "background-2",
              "label": "t:sections.all.colors.background_2.label"
            },
            {
              "value": "inverse",
              "label": "t:sections.all.colors.inverse.label"
            }
          ],
          "default": "accent-1",
          "label": "t:sections.all.colors.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.link.label"
        }
      ]
    }
  ],
  "default": {
    "blocks": [
      {
        "type": "announcement"
      }
    ]
  }
}
{% endschema %}
